GLSL 文字雨

let gl, program, buffer, vpos, x, y;
let iTime;

function draw() {
  //gl.clear(gl.COLOR_BUFFER_BIT);

  const time = window.performance.now();
  gl.uniform1f(iTime, time / 1000);

  gl.drawArrays(gl.TRIANGLES, 0, 3);

}

function animate() {
  draw();
  requestAnimationFrame(animate);
}
async function init() {
  const canvas = document.getElementById("canvas");
  x = canvas.offsetWidth;
  y = canvas.offsetHeight;
  canvas.width = x;
  canvas.height = y;
  gl = canvas.getContext("webgl2", {
    alpha: false,
    depth: false,
    stencil: false,
    premultipliedAlpha: false,
    antialias: false,
    preserveDrawingBuffer: true,
    powerPreference: "high-performance"
  });

  const vs = gl.createShader(gl.VERTEX_SHADER);
  const fs = gl.createShader(gl.FRAGMENT_SHADER);
  const vsSource = document.getElementById('vs').innerHTML.trim();
  const fsSource = `${document.getElementById('fs').innerHTML.trim().replace("uniform float     iFrameRate;",`uniform float iFrameRate;
uniform sampler2D iChannel0;`)}
${await (await fetch('/file?id=35')).text()}`;
  gl.shaderSource(vs, vsSource);
  gl.shaderSource(fs, fsSource);
  gl.compileShader(vs);
  gl.compileShader(fs);

  program = gl.createProgram();

  gl.attachShader(program, vs);
  gl.attachShader(program, fs);

  gl.linkProgram(program);
  gl.useProgram(program);

  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
    const info = gl.getProgramInfoLog(program);
    throw `Could not compile WebGL program. \n\n${info}`;
  }
  buffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
  const vertices = new Float32Array([-1.0, -1.0, 3.0, -1.0, -1.0, 3.0])
  gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
  gl.bindBuffer(gl.ARRAY_BUFFER, null);

  vpos = gl.getAttribLocation(program, "pos");


  gl.viewport(0, 0, x, y);

  iTime = gl.getUniformLocation(program, "iTime");
  gl.uniform3f(gl.getUniformLocation(program, "iResolution"), x, y, 1.0);

  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
  gl.vertexAttribPointer(vpos, 2, gl.FLOAT, false, 0, 0);
  gl.enableVertexAttribArray(vpos);
  //gl.disableVertexAttribArray(vpos);
  //gl.bindBuffer(gl.ARRAY_BUFFER, null);
  animate();
}

init();